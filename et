[33mcommit 18772afdb46937b026aebfcd5a6a18cdfd097264[m[33m ([m[1;36mHEAD -> [m[1;32mvideo[m[33m, [m[1;31morigin/video[m[33m)[m
Author: Chikirao <ivankonanch@gmail.com>
Date:   Mon Jun 5 08:24:29 2023 +0300

    2.1 compleate

[1mdiff --git a/2.1-databases/work_with_database/main/settings.py b/2.1-databases/work_with_database/main/settings.py[m
[1mindex 7a57a4c..18cf1fb 100644[m
[1m--- a/2.1-databases/work_with_database/main/settings.py[m
[1m+++ b/2.1-databases/work_with_database/main/settings.py[m
[36m@@ -55,7 +55,7 @@[m [mDATABASES = {[m
         'HOST': '127.0.0.1',[m
         'PORT': '5432',[m
         'USER': 'postgres',[m
[31m-        'PASSWORD': '–≤–∞—à –ø–∞—Ä–æ–ª—å',[m
[32m+[m[32m        'PASSWORD': 'mamasha3',[m
     }[m
 }[m
 [m
[1mdiff --git a/2.1-databases/work_with_database/phones/management/commands/import_phones.py b/2.1-databases/work_with_database/phones/management/commands/import_phones.py[m
[1mindex be777c5..a2e6113 100644[m
[1m--- a/2.1-databases/work_with_database/phones/management/commands/import_phones.py[m
[1m+++ b/2.1-databases/work_with_database/phones/management/commands/import_phones.py[m
[36m@@ -1,17 +1,23 @@[m
 import csv[m
[32m+[m[32mfrom datetime import datetime[m
 [m
 from django.core.management.base import BaseCommand[m
 from phones.models import Phone[m
 [m
 [m
 class Command(BaseCommand):[m
[31m-    def add_arguments(self, parser):[m
[31m-        pass[m
[32m+[m[32m    help = 'Import phones from csv file'[m
 [m
     def handle(self, *args, **options):[m
[31m-        with open('phones.csv', 'r') as file:[m
[31m-            phones = list(csv.DictReader(file, delimiter=';'))[m
[32m+[m[32m        with open('phones.csv', 'r') as csvfile:[m
[32m+[m[32m            phone_reader = csv.reader(csvfile, delimiter=';')[m
[32m+[m[32m            next(phone_reader)[m
 [m
[31m-        for phone in phones:[m
[31m-            # TODO: –î–æ–±–∞–≤—å—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏[m
[31m-            pass[m
[32m+[m[32m            for row in phone_reader:[m
[32m+[m[32m                print(row)[m
[32m+[m[32m                id, name, image, price, release_date_str, lte_exists_str = row[m
[32m+[m[32m                release_date = datetime.strptime(release_date_str, '%Y-%m-%d').date()[m
[32m+[m[32m                lte_exists = lte_exists_str.lower() == 'true'[m
[32m+[m[32m                phone = Phone(id=id, name=name, image=image, price=price, release_date=release_date, lte_exists=lte_exists)[m
[32m+[m[32m                phone.save()[m
[32m+[m[32m        self.stdout.write(self.style.SUCCESS('Phones have been imported successfully!'))[m
\ No newline at end of file[m
[1mdiff --git a/2.1-databases/work_with_database/phones/migrations/0001_initial.py b/2.1-databases/work_with_database/phones/migrations/0001_initial.py[m
[1mnew file mode 100644[m
[1mindex 0000000..cb12c4a[m
[1m--- /dev/null[m
[1m+++ b/2.1-databases/work_with_database/phones/migrations/0001_initial.py[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m# Generated by Django 4.2.1 on 2023-06-03 21:09[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    initial = True[m
[32m+[m
[32m+[m[32m    dependencies = [][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name="Phone",[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ("id", models.IntegerField(primary_key=True, serialize=False)),[m
[32m+[m[32m                ("name", models.CharField(max_length=255)),[m
[32m+[m[32m                ("image", models.URLField()),[m
[32m+[m[32m                ("price", models.IntegerField()),[m
[32m+[m[32m                ("release_date", models.DateField()),[m
[32m+[m[32m                ("lte_exists", models.BooleanField()),[m
[32m+[m[32m                ("slug", models.SlugField()),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/2.1-databases/work_with_database/phones/models.py b/2.1-databases/work_with_database/phones/models.py[m
[1mindex e79b3ba..12b8073 100644[m
[1m--- a/2.1-databases/work_with_database/phones/models.py[m
[1m+++ b/2.1-databases/work_with_database/phones/models.py[m
[36m@@ -1,6 +1,16 @@[m
 from django.db import models[m
[32m+[m[32mfrom django.template.defaultfilters import slugify[m
 [m
 [m
 class Phone(models.Model):[m
[31m-    # TODO: –î–æ–±–∞–≤—å—Ç–µ —Ç—Ä–µ–±—É–µ–º—ã–µ –ø–æ–ª—è[m
[31m-    pass[m
[32m+[m[32m    id = models.IntegerField(primary_key=True)[m
[32m+[m[32m    name = models.CharField(max_length=255)[m
[32m+[m[32m    image = models.URLField()[m
[32m+[m[32m    price = models.IntegerField()[m
[32m+[m[32m    release_date = models.DateField()[m
[32m+[m[32m    lte_exists = models.BooleanField()[m
[32m+[m[32m    slug = models.SlugField()[m
[32m+[m
[32m+[m[32m    def save(self, *args, **kwargs):[m
[32m+[m[32m        self.slug = slugify(self.name)[m
[32m+[m[32m        super(Phone, self).save(*args, **kwargs)[m
\ No newline at end of file[m
[1mdiff --git a/2.1-databases/work_with_database/phones/views.py b/2.1-databases/work_with_database/phones/views.py[m
[1mindex afec3b5..9b020c9 100644[m
[1m--- a/2.1-databases/work_with_database/phones/views.py[m
[1m+++ b/2.1-databases/work_with_database/phones/views.py[m
[36m@@ -1,17 +1,29 @@[m
[31m-from django.shortcuts import render, redirect[m
[31m-[m
[32m+[m[32mfrom django.shortcuts import render, redirect, get_object_or_404[m
[32m+[m[32mfrom phones.models import Phone[m
 [m
 def index(request):[m
     return redirect('catalog')[m
 [m
 [m
 def show_catalog(request):[m
[32m+[m[32m    phones = Phone.objects.all()[m
[32m+[m
[32m+[m[32m    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–∑ GET –∑–∞–ø—Ä–æ—Å–∞[m
[32m+[m[32m    sort_by = request.GET.get('sort')[m
[32m+[m[32m    if sort_by == 'name':[m
[32m+[m[32m        phones = phones.order_by('name')[m
[32m+[m[32m    elif sort_by == 'min_price':[m
[32m+[m[32m        phones = phones.order_by('price')[m
[32m+[m[32m    elif sort_by == 'max_price':[m
[32m+[m[32m        phones = phones.order_by('-price')[m
[32m+[m
[32m+[m[32m    context = {'phones': phones}[m
     template = 'catalog.html'[m
[31m-    context = {}[m
     return render(request, template, context)[m
 [m
 [m
 def show_product(request, slug):[m
[32m+[m[32m    phone = get_object_or_404(Phone, slug=slug)[m
     template = 'product.html'[m
[31m-    context = {}[m
[32m+[m[32m    context = {'phone': phone}[m
     return render(request, template, context)[m
